{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAM,CACVC,OAAQC,SAASC,cAAc,UAI7BC,EAAa,EACbC,EAAY,EACZC,EAAoB,EAyBxB,SAASC,EAAcC,EAAUC,GAE/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAExCC,YAAW,WACLH,EACAF,EAAQ,CAAEM,SAAAT,EAAUU,WAAAT,IAEpBG,EAAO,CAAEK,SAAAT,EAAUU,WAAAT,G,GAEpBA,E,IAjCPT,EAAKC,OAAOkB,iBAAiB,UAC7B,SAAkBC,GAChBA,EAAEC,iBACF,IAA8BC,EAAAtB,EAAKC,OAAOsB,SAAnCC,EAAuBF,EAAvBE,MAAOC,EAAgBH,EAAhBG,KAAMC,EAAUJ,EAAVI,OACpBtB,EAAauB,OAAOH,EAAMI,OAC1BvB,EAAYsB,OAAOF,EAAKG,OACxBtB,EAAoBqB,OAAOD,EAAOE,OAClC5B,EAAKC,OAAO4B,QAEZ,IAAK,IAAIC,EAAI,EAAGA,GAAKxB,EAAmBwB,GAAG,EAEzCvB,EADWuB,EACa1B,GACrB2B,MAAK,SAAAC,G,IAAGC,EAAQD,EAARf,SAAUiB,EAAUF,EAAVd,WACjBiB,EAAArC,GAASsC,OAAOC,QAAQ,uBAAwCC,OAAfL,EAAS,QAAiBK,OAAXJ,EAAW,M,IAE5EK,OAAM,SAAAP,G,IAAGQ,EAAQR,EAARf,SAAUwB,EAAUT,EAAVd,WAClBiB,EAAArC,GAASsC,OAAOM,QAAQ,sBAAqCJ,OAAfE,EAAS,QAAiBF,OAAXG,EAAW,M,IAE5ErC,GAAcC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs ={\n  formEl: document.querySelector('.form'),\n}\n\n\nlet firstDelay = 0;\nlet delayStep = 0;\nlet amountRepetitions = 0;\nlet position = 0;\n\nrefs.formEl.addEventListener('submit', onSubmit)\nfunction onSubmit(e) {\n  e.preventDefault();\n  const {delay, step, amount} = refs.formEl.elements;\n  firstDelay = Number(delay.value);\n  delayStep = Number(step.value);\n  amountRepetitions = Number(amount.value);\n  refs.formEl.reset();\n\n  for (let i = 1; i <= amountRepetitions; i+=1) {\n    position = i;\n    createPromise(position, firstDelay)\n      .then(({ position, firstDelay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${firstDelay}ms`);\n      })\n      .catch(({ position, firstDelay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${firstDelay}ms`);\n      })\n    firstDelay += delayStep;\n  }\n};\n\nfunction createPromise(position, firstDelay) {\n  \n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    \n  setTimeout(() => {\n    if (shouldResolve) {\n        resolve({ position, firstDelay })\n      } else {\n        reject({ position, firstDelay })\n      }\n    }, firstDelay)\n  })\n};\n  \n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","formEl","document","querySelector","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$amountRepetitions","$ce04d3a99e08e73b$var$createPromise","position3","firstDelay3","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","firstDelay","addEventListener","e","preventDefault","_elements","elements","delay","step","amount","Number","value","reset","i","then","param","position1","firstDelay1","$parcel$interopDefault","Notify","success","concat","catch","position2","firstDelay2","failure"],"version":3,"file":"03-promises.6bdd411c.js.map"}